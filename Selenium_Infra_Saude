from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pandas as pd
import time
from selenium.webdriver.common.keys import Keys

# ===== CONFIGURAÇÃO DO SELENIUM =====
chrome_options = Options()
chrome_options.add_argument("--no-sandbox")
chrome_options.add_argument("--headless") 
chrome_options.add_argument("--disable-dev-shm-usage")

# Inciar Drive
driver = webdriver.Chrome(options=chrome_options)

# Definir site
url = 'https://cnes.datasus.gov.br/pages/estabelecimentos/consulta.jsp'
driver.get(url)

# Definir tempo de carregamento
time.sleep(1)

# Filtrar por MG
## Clicar no Filtro
estado = driver.find_element(By.XPATH, "/html/body/div[2]/main/div/div[2]/div/form[1]/div[2]/div[1]/div/select")
estado.click()
time.sleep(1)
## Filtra por MI
estado.send_keys("MI")
time.sleep(1)
## Clicar enter
estado.send_keys(Keys.ENTER)

# Filtrar Município
muni = driver.find_element(By.XPATH, "/html/body/div[2]/main/div/div[2]/div/form[1]/div[2]/div[2]/div/select")
muni.click()

## Filtra por "BE"
muni.send_keys("BE")
time.sleep(1)

## Pressionar a seta pra baixo DUAS VEZES
muni.send_keys(Keys.ARROW_DOWN)
time.sleep(0.5)
muni.send_keys(Keys.ARROW_DOWN)
time.sleep(0.5)

## Clicar enter
muni.send_keys(Keys.ENTER)

# Filtrar Administração
adm = driver.find_element(By.XPATH, "/html/body/div[2]/main/div/div[2]/div/form[1]/div[3]/div[2]/div/select")
adm.click()

## Descer 1 vez
adm.send_keys(Keys.ARROW_DOWN)

## Clicar enter
adm.send_keys(Keys.ENTER)

# Pesquisar
pesquisar = driver.find_element(By.XPATH, "/html/body/div[2]/main/div/div[2]/div/form[2]/div/button")
pesquisar.click()
time.sleep(2)

# Mostrar 30 na página
pg30 = driver.find_element(By.XPATH, "/html/body/div[2]/main/div/div[2]/div/div[2]/div[2]/form/div/select")
pg30.click()
pg30.send_keys("3")
pg30.send_keys(Keys.ENTER)

# === Coletar Dados === #
time.sleep(2)

# ===== PASSO 5: Coletar os dados =====
dados = []

# Iterar pelas 17 páginas
for pagina in range(17):
    print(f"Extraindo dados da página {pagina + 1}...")

    # Capturar todos os botões para abrir detalhes
    botoes_detalhes = driver.find_elements(By.XPATH, "//button[@ng-click='buscarEstabalecimento(estab.id)']")
    
    for botao in botoes_detalhes:
        try:
            botao.click()
            time.sleep(1)

            # Capturar nome do estabelecimento
            nome = driver.find_element(By.XPATH, "//label[text()='Nome']/following-sibling::input").get_attribute('value')

            # Adicionar aos dados
            dados.append({'Nome': nome})
            print(f"→ Nome capturado: {nome}")

            # Fechar janela modal
            fechar = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[@data-dismiss='modal']")))
            fechar.click()
            time.sleep(0.5)
        
        except Exception as e:
            print(f"Erro ao capturar detalhes: {e}")
            continue
    
    # Tentar ir para a próxima página
    try:
        proxima_pagina = driver.find_element(By.XPATH, "//a[@ng-switch-when='next']")
        proxima_pagina.click()
        time.sleep(2)
    except:
        print("Não há mais páginas disponíveis.")
        break

# ===== PASSO 6: Salvar os dados =====
df = pd.DataFrame(dados)

# Salvar em CSV
df.to_csv('dados_estabelecimentos.csv', index=False)
print("\n✅ Dados salvos em 'dados_estabelecimentos.csv'")

# ===== ENCERRAR O DRIVER =====
driver.quit()
print("\n✅ Finalizado com sucesso!")
